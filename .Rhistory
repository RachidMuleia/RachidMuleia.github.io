library(xfun)
library(blogdown)
blogdown::new_site(dir='C:/Users/Rachid/Dropbox/MY_WEBSITE/RACHIDMULEIA.github.io',theme = "user/repo", theme_example = TRUE)
remotes::install_github('rstudio/blogdown')
install.packages("remotes")
library(remotes)
remotes::install_github('rstudio/blogdown')
library(xfun)
library(blogdown)
blogdown::new_site(dir='C:/Users/Rachid/Dropbox/MY_WEBSITE/RACHIDMULEIA.github.io',theme = "user/repo", theme_example = TRUE)
blogdown::new_site(dir='C:/Users/Rachid/Dropbox/MY_WEBSITE/RACHIDMULEIA.github.io',theme = "user/repo", theme_example = TRUE)
update.packages(ask = FALSE, checkBuilt = TRUE)
blogdown::serve_site()
library(blogdown)
library(xfun)
library(blogdown)
blogdown::new_site(dir='C:/Users/Rachid/Dropbox/Mywebsite',theme = "wowchemy/starter-hugo-academic", theme_example = TRUE)
60/8
16*8
16*4
8*4
3*2
38-60
22-8
26-8
36/8
36/4
60+93
citation()
citation('survey')
blogdown::serve_site(.site_dir ='C:/Users/Rachid/Dropbox/website' )
rstudioapi::navigateToFile("C:/Users/Rachid/Dropbox/website/config/_default/menus.yaml")
blogdown:::serve_site()
blogdown::serve_site(.site_dir ='C:/Users/Rachid/Dropbox/website' )
- [Ficha de exercício número 1](content/project/Ficha1.pdf])
install.packages("liver")
library(liver)
data("cereal")
cereal
library(rio)
library(janitor)
library(lubridate)
library(tidyverse)
library(caret)
library(epiR)
library(xlsx)
## READ DATA
ITS_DF<-import('BASE_DADOS_FINAL.xlsx')
####################################################################################
##### PROJECT: MELHORIA DO DIAGNOSTICO DAS ITS NA US USANDO TESTE RAPIDO
##### OWNER: CHARLLORE                                                  ############
####  DESCRIPTION: THIS SCRIPT IS TO RUN DATA CLEANING AND ANALYSIS     ###########
##### AUTHOR: RACHID MULEIA, BIOSTATISTICIAN
##### DATE: 06 MARCH 2023
###################################################################################
setwd('C:/Users/Rachid/Dropbox/INS/DRA CHARLOTTE/DATA')
## READ DATA
ITS_DF<-import('BASE_DADOS_FINAL.xlsx')
ITS_RES_DF<-import('base_itsfinal.xlsx')
View(ITS_DF)
ITS_DF<-clean_names(ITS_DF)
View(ITS_DF)
## CLEAN SECTION ON SYMPTOMS
table(ITS_DF$x17_4_coceira_hoje)
ITS_DF$x17_4_data_coceira<-as.numeric(ITS_DF$x17_4_data_coceira)
ITS_DF$x17_4_data_coceira<-as.Date(ITS_DF$x17_4_data_coceira, origin ="1900-01-01")
# CORRECT THE DATES IN DATA- IN THE FILE WE HAD THREE DATE FORMAT
# "%Y-%m-%d" , NOV 26, 2022, and 4444
var_names<-names(ITS_DF)
pos_names<-which(grepl('_data_', var_names))
ITS_DF1<-ITS_DF[, pos_names]
ITS_DF2<-ITS_DF1[, -which(grepl('_option', names(ITS_DF1)))]
var_names1<-names(ITS_DF2)
for(i in 1:length(var_names1)){
if(sum(grepl('-',ITS_DF2[,var_names1[i]]),na.rm = TRUE)>0){
ITS_DF2[, var_names1[i]]<-as.Date(ITS_DF2[,var_names1[i]], format ="%Y-%m-%d" )
} else{
if(sum(grepl(',',ITS_DF2[,var_names1[i]]),na.rm = TRUE)>0){
ITS_DF2[, var_names1[i]]<-as.Date(ITS_DF2[,var_names1[i]], format = "%B %e, %Y")
} else{
ITS_DF2[, var_names1[i]]<-as.Date(ITS_DF2[,var_names1[i]],  origin = "1900-01-01")
}
}
}
# TURN BACK TO OUR DATA AND REPLACE THE DATES WITH CORRECT DATES
ITS_DF[,names(ITS_DF2)]<-ITS_DF2
# RUN FREQUENCIES FOR SYMPTOMS
table(ITS_DF$x17_1_corrimento_vaginal_hoje,useNA = 'ifany')
################## SELECT VARIABLES FOR SYMPTOMS #################################
# SYMPTOMS
var_sim<-c('x17_1_corrimento_vaginal_hoje', '17_3_dor_na_parte_inferior_doabdomen_hoje',
'x17_4_coceira_hoje', 'x17_10_dor_durante_acto','x17_12_ulcera_genital_hoje',
'x17_13_corrimento_uretral', 'x17_13_inchaco_hoje', 'x17_13_dor_ao_urinar_hoje',
'x18_1_teve_verrugas_hoje', 'x18_1_irritacao_na_pele_hoje') #add a variable at least one symptom
# add a variable about odor, pastoso x22a_odor, xx2_c
length(var_sim)
sens_spec<-function(var, y, data, digit.est=1, digit.ci=2){
tab<-lapply(var, function(x){table(data[,x],data[,y])})
sens_res<-lapply(tab, epi.tests, method='exact', digits=2, conf.level=0.95)
data_sens<-list()
data_sens1<-list()
for(i in 1:length(sens_res)){
data_sens[[i]]<-sens_res[[i]]$detail[sens_res[[i]]$detail$statistic %in%c('se', 'sp', 'pv.pos', 'pv.neg'),]
data_sens1[[i]]<-data.frame(stat=data_sens[[i]][,1],
estimate=paste( round(data_sens[[i]][,2],digit.est), '(',
round(data_sens[[i]][,3],digit.ci),'-',round(data_sens[[i]][,4],digit.ci), ')' ))
}
data_all<-do.call(rbind, data_sens1)
data_all1<-data.frame(var=rep(var, each=4), data_all)
return(data_all1)
}
ITS_DF_FINAL<-merge( ITS_DF, ITS_RES_DF[,c(1,30:39)],by.x='x11_codigo_do_participante', by.y='x11_codigo_do_Participante')
names(ITS_DF_FINAL)
teste<-import('BASE_TESTES.xlsx')
rm(teste)
teste_df<-import('BASE_TESTES.xlsx')
View(teste_df)
unique(teste_df$Marca_TDR_Chlamydia)
teste_df_maca<-teste_df[teste_df$Marca_TDR_Chlamydia %in%c('Aria','All Test', 'Acro'),]
dim(teste_df_maca)
teste_df_marca<-teste_df[teste_df$Marca_TDR_Chlamydia %in%c('Aria','All Test', 'Acro'),]
rm(teste_df_maca)
CL_GX_marca_todos<-sens_spec(var=c('x58_chlamydia_cff'), y='x22bb_resultado_gene_xpert_ct_colheita_urina_cff', data=teste_df_marca,digit.est = 3)
names(teste_df_marca)
CL_GX_marca_todos<-sens_spec(var=c('x58_chlamydia_CF'), y='x22bb_resultado_GeneXpert_CT_Colheita_urina_CF"', data=teste_df_marca,digit.est = 3)
CL_GX_marca_todos<-sens_spec(var=c('x58_Chlamydia_CF'), y='x22bb_resultado_GeneXpert_CT_Colheita_urina_CF"', data=teste_df_marca,digit.est = 3)
CL_GX_marca_todos<-sens_spec(var=c('x58_Chlamydia_CF'), y='x22bb_resultado_GeneXpert_CT_Colheita_urina_CF', data=teste_df_marca,digit.est = 3)
CL_GX_marca_todos
teste_df_marca<-teste_df[teste_df$Marca_TDR_Chlamydia=='Aria',]
CL_GX_marca_todos<-sens_spec(var=c('x58_Chlamydia_CF'), y='x22bb_resultado_GeneXpert_CT_Colheita_urina_CF', data=teste_df_marca,digit.est = 3)
CL_GX_marca_todos
teste_df_marca<-teste_df[teste_df$Marca_TDR_Chlamydia=='All Teste',]
CL_GX_marca_todos<-sens_spec(var=c('x58_Chlamydia_CF'), y='x22bb_resultado_GeneXpert_CT_Colheita_urina_CF', data=teste_df_marca,digit.est = 3)
teste_df_marca<-teste_df[teste_df$Marca_TDR_Chlamydia=='Acro',]
CL_GX_marca_todos<-sens_spec(var=c('x58_Chlamydia_CF'), y='x22bb_resultado_GeneXpert_CT_Colheita_urina_CF', data=teste_df_marca,digit.est = 3)
CL_GX_marca_todos
tab5<-with(teste_df_marca, addmargins(table(x58_Chlamydia_CF,x22bb_resultado_GeneXpert_CT_Colheita_urina_CF), margin=c(1,2)))
tab5
teste_final_df<-merge(ITS_DF_FINAL, teste_df, by='x11_codigo_do_participante' )
teste_final_df<-merge(ITS_DF_FINAL, teste_df, by.x='x11_codigo_do_participante' , by.y='x11_codigo_do_Participante')
dim(teste_final_df)
# Nao é possivel calcular sensibilidade e especifidade por marca.
teste_df_marca<-teste_final_df[teste_final_df$Marca_TDR_Chlamydia %in%c('Aria','All Test', 'Acro'),]
CL_GX_marca_todos<-sens_spec(var=c('x58_Chlamydia_CF'), y='x22bb_resultado_gene_xpert_ct_colheita_urina_cff', data=teste_df_marca,digit.est = 3)
CL_GX_marca_todos
CL_GX_marca_todos<-sens_spec(var=c('x58_chlamydia_cff'), y='x22bb_resultado_gene_xpert_ct_colheita_urina_cff', data=teste_df_marca,digit.est = 3)
CL_GX_marca_todos
tab5<-with(teste_df_marca, addmargins(table(x58_chlamydia_cff,x22bb_resultado_geneXpert_ct_colheita_urina_cff), margin=c(1,2)))
tab5<-with(teste_df_marca, addmargins(table(x58_chlamydia_cff,x22bb_resultado_genexpert_ct_colheita_urina_cff), margin=c(1,2)))
tab5<-with(teste_df_marca, addmargins(table(x58_chlamydia_cff,x22bb_resultado_gene_xpert_ct_colheita_urina_cff), margin=c(1,2)))
tab5
table(ITS_DF_FINAL$x22bb_resultado_gene_xpert_ct_colheita_urina_cff)
ITS_DF_FINAL$x22bb_resultado_gene_xpert_ct_colheita_urina_cff[ITS_DF_FINAL$x22bb_resultado_gene_xpert_ct_colheita_urina_cff=='3_NAO REALIZADO']<-NA
table(ITS_DF_FINAL$x59_gonorreia_cff)
ITS_DF_FINAL$x59_gonorreia_cff[ITS_DF_FINAL$x59_gonorreia_cff=='3_NAO REALIZADO']<-NA
table(ITS_DF_FINAL$x58_chlamydia_cff,useNA = 'ifany')
ITS_DF_FINAL$x58_chlamydia_cff[ITS_DF_FINAL$x58_chlamydia_cff=='3_NAO REALIZADO']<-NA
table(ITS_DF_FINAL$x60_tricomoniases_cff,useNA = 'ifany')
ITS_DF_FINAL$x60_tricomoniases_cff[ITS_DF_FINAL$x60_tricomoniases_cff=='3_NAO REALIZADO']<-NA
table(ITS_DF_FINAL$x22bb_resultado_gene_xpert_ng_colheita_urina_cff)
ITS_DF_FINAL$x22bb_resultado_gene_xpert_ng_colheita_urina_cff[ITS_DF_FINAL$x22bb_resultado_gene_xpert_ng_colheita_urina_cff=='3_NAO REALIZADO']<-NA
table(ITS_DF_FINAL$resultado_panther_tv)
ITS_DF_FINAL$resultado_panther_tv[ITS_DF_FINAL$resultado_panther_tv=='3_NAO REALIZADO']<-NA
table(ITS_DF_FINAL$resultado_panther_ct)
ITS_DF_FINAL$resultado_panther_ct[ITS_DF_FINAL$resultado_panther_ct=='3_NAO REALIZADO']<-NA
table(ITS_DF_FINAL$resultado_panther_ng)
ITS_DF_FINAL$resultado_panther_ng[ITS_DF_FINAL$resultado_panther_ng=='3_NAO REALIZADO']<-NA
teste_final_df<-merge(ITS_DF_FINAL, teste_df, by.x='x11_codigo_do_participante' , by.y='x11_codigo_do_Participante')
# Nao é possivel calcular sensibilidade e especifidade por marca.
teste_df_marca<-teste_final_df[teste_final_df$Marca_TDR_Chlamydia %in%c('Aria','All Test', 'Acro'),]
CL_GX_marca_todos<-sens_spec(var=c('x58_chlamydia_cff'), y='x22bb_resultado_gene_xpert_ct_colheita_urina_cff', data=teste_df_marca,digit.est = 3)
tab5<-with(teste_df_marca, addmargins(table(x58_chlamydia_cff,x22bb_resultado_gene_xpert_ct_colheita_urina_cff), margin=c(1,2)))
CL_GX_marca_todos
tab5
dim(teste_df_marca)
teste_df_aria<-teste_final_df[teste_final_df$Marca_TDR_Chlamydia %in%c('Aria'),]
CL_GX_marca_aria<-sens_spec(var=c('x58_chlamydia_cff'), y='x22bb_resultado_gene_xpert_ct_colheita_urina_cff', data=teste_df_aria,digit.est = 3)
tab5_cl_aria<-with(teste_df_aria, addmargins(table(x58_chlamydia_cff,x22bb_resultado_gene_xpert_ct_colheita_urina_cff), margin=c(1,2)))
tab5_cl_aria
teste_df_all<-teste_final_df[teste_final_df$Marca_TDR_Chlamydia %in%c('All Teste'),]
CL_GX_marca_all<-sens_spec(var=c('x58_chlamydia_cff'), y='x22bb_resultado_gene_xpert_ct_colheita_urina_cff', data=teste_df_all,digit.est = 3)
tab5_cl_aria<-with(teste_df_all, addmargins(table(x58_chlamydia_cff,x22bb_resultado_gene_xpert_ct_colheita_urina_cff), margin=c(1,2)))
teste_df_all<-teste_final_df[teste_final_df$Marca_TDR_Chlamydia %in%c('All Test'),]
CL_GX_marca_all<-sens_spec(var=c('x58_chlamydia_cff'), y='x22bb_resultado_gene_xpert_ct_colheita_urina_cff', data=teste_df_all,digit.est = 3)
tab5_cl_all<-with(teste_df_all, addmargins(table(x58_chlamydia_cff,x22bb_resultado_gene_xpert_ct_colheita_urina_cff), margin=c(1,2)))
CL_GX_marca_all
tab5_cl_all
teste_df_acro<-teste_final_df[teste_final_df$Marca_TDR_Chlamydia %in%c('Acro'),]
CL_GX_marca_acro<-sens_spec(var=c('x58_chlamydia_cff'), y='x22bb_resultado_gene_xpert_ct_colheita_urina_cff', data=teste_df_all,digit.est = 3)
tab5_cl_acro<-with(teste_df_acro, addmargins(table(x58_chlamydia_cff,x22bb_resultado_gene_xpert_ct_colheita_urina_cff), margin=c(1,2)))
CL_GX_marca_acro
tab5_cl_acro
unique(teste_final_df$Marca_TDR_Gonorreia)
teste_df_acro<-teste_final_df[teste_final_df$Marca_TDR_Gonorreia %in%c('Acro'),]
NG_GX_acro<-sens_spec(var=c('x59_gonorreia_cff'), y='x22bb_resultado_gene_xpert_ng_colheita_urina_cff', data=teste_df_acro, digit.est = 3)
NG_GX_acro
tab5_GN_acro<-with(teste_df_acro, addmargins(table(x58_chlamydia_cff,x22bb_resultado_gene_xpert_ct_colheita_urina_cff), margin=c(1,2)))
tab5_GN_acro
tab5_GN_acro<-with(teste_df_acro, addmargins(table(x59_gonorreia_cff,x22bb_resultado_gene_xpert_ng_colheita_urina_cff), margin=c(1,2)))
tab5_GN_acro
performance_MARCA<-createWorkbook(paste(path, 'PERFORMANCE_MARCA.xlsx',sep='/'))
library(openxlsx)
performance_MARCA<-createWorkbook(paste(path, 'PERFORMANCE_MARCA.xlsx',sep='/'))
path<-'C:/Users/Rachid/Dropbox/INS/DRA CHARLOTTE/TABELAS'
performance_MARCA<-createWorkbook(paste(path, 'PERFORMANCE_MARCA.xlsx',sep='/'))
addWorksheet(performance_MARCA, 'CL_TODOS')
#addWorksheet(performance_MARCA, 'CL_ARIA')
addWorksheet(performance_MARCA, 'CL_ALL_TEST')
addWorksheet(performance_MARCA, 'CL_ACRO')
addWorksheet(performance_MARCA, 'NG_ACRO')
writeData(performance_MARCA, sheet=1, CL_GX_marca_todos)
writeData(performance_MARCA, sheet=2, CL_GX_marca_all)
writeData(performance_MARCA, sheet=3, CL_GX_marca_acro)
writeData(performance_MARCA, sheet=4, NG_GX_acro)
#writeData(performance_MARCA, sheet=5, tab5)
saveWorkbook(performance_MARCA, file =paste(path, "PERFORMANCE_MARCA.xlsx",sep='/'), overwrite = TRUE)
tab5_cl_todos<-with(teste_df_marca, addmargins(table(x58_chlamydia_cff,x22bb_resultado_gene_xpert_ct_colheita_urina_cff), margin=c(1,2)))
tab5_cl_todos
performance_MARCA<-createWorkbook(paste(path, 'PERFORMANCE_MARCA.xlsx',sep='/'))
addWorksheet(performance_MARCA, 'CL_TODOS')
addWorksheet(performance_MARCA, 'CL_ARIA')
addWorksheet(performance_MARCA, 'CL_ALL_TEST')
addWorksheet(performance_MARCA, 'CL_ACRO')
addWorksheet(performance_MARCA, 'NG_ACRO')
writeData(performance_MARCA, sheet=1, tab5_cl_todos)
writeData(performance_MARCA, sheet=2, tab5_cl_aria)
writeData(performance_MARCA, sheet=3, tab5_cl_all)
writeData(performance_MARCA, sheet=4, tab5_cl_acro)
writeData(performance_MARCA, sheet=5, tab5_GN_acro)
saveWorkbook(performance_MARCA, file =paste(path, "PERFORMANCE_MARCA_2x2.xlsx",sep='/'), overwrite = TRUE)
unique(teste_df$`Tipo de amostra, Panther CT`)
## AMOSTRAS DE SWAB PARA CADA PATOLOGIA
teste_final_df<-clean_names(teste_final_df)
teste_sawb_cl_df<-teste_final_df[teste_final_df$tipo_de_amostra_panther_ct=='1_Swabs Endocervical', ]
teste_final_df$tipo_de_amostra_panther_ct
teste_sawb_NG_df<-teste_final_df[teste_final_df$tipo_de_amostra_panther_ng=='1_Swabs Endocervical', ]
teste_sawb_TV_df<-teste_final_df[teste_final_df$tipo_de_amostra_panther_tv=='1_Swabs Endocervical', ]
TV_PT_SWAB<-sens_spec(var=c('x60_tricomoniases_cff'),y='resultado_panther_tv', data=teste_sawb_TV_df)
TV_PT_SWAB<-sens_spec(var=c('x60_tricomoniases_cff'),y='resultado_panther_tv', data=teste_sawb_TV_df)
tab5_TV_SWAB<-with(teste_df_acro, addmargins(table(x60_tricomoniases_cff,resultado_panther_tv), margin=c(1,2)))
tab5_TV_SWAB
tab5_TV_SWAB<-with(teste_sawb_TV_df, addmargins(table(x60_tricomoniases_cff,resultado_panther_tv), margin=c(1,2)))
teste_sawb_TV_df
unique(teste_final_df$tipo_de_amostra_panther_tv)
teste_sawb_TV_df<-teste_final_df[teste_final_df$tipo_de_amostra_panther_tv=='2_Swabs Endocervical', ]
TV_PT_SWAB<-sens_spec(var=c('x60_tricomoniases_cff'),y='resultado_panther_tv', data=teste_sawb_TV_df)
tab5_TV_SWAB<-with(teste_sawb_TV_df, addmargins(table(x60_tricomoniases_cff,resultado_panther_tv), margin=c(1,2)))
tab5_TV_SWAB
TV_PT_SWAB
PTCT_GX_SWAB<-sens_spec(var='resultado_panther_ct',y='x22bb_resultado_gene_xpert_ct_colheita_urina_cff' , data=teste_sawb_cl_df,digit.est = 3)
PTNG_GX_SWAB<-sens_spec(var='resultado_panther_ng', y='x22bb_resultado_gene_xpert_ng_colheita_urina_cff' , data=teste_sawb_NG_df,digit.est = 3)
PTCT_GX_SWAB
PTNG_GX_SWAB
TV_PT_SWAB<-sens_spec(var=c('x60_tricomoniases_cff'),y='resultado_panther_tv', data=teste_sawb_TV_df, digit.est = 3)
tab5_CL_SWAB<-with(teste_sawb_cl_df, addmargins(table(resultado_panther_ct,x22bb_resultado_gene_xpert_ct_colheita_urina_cff), margin=c(1,2)))
PTNG_GX_SWAB<-sens_spec(var='resultado_panther_ng', y='x22bb_resultado_gene_xpert_ng_colheita_urina_cff' , data=teste_sawb_NG_df,digit.est = 3)
tab5_NG_SWAB<-with(teste_sawb_NG_df, addmargins(table(resultado_panther_ng,x22bb_resultado_gene_xpert_ng_colheita_urina_cff), margin=c(1,2)))
### SENSIBILIDADE SWAB
performance_SWAB<-createWorkbook(paste(path, 'PERFORMANCE_SWAB.xlsx',sep='/'))
addWorksheet(performance_SWAB, 'TV_PT_SWAB')
addWorksheet(performance_SWAB, 'PTCT_GX_SWAB')
addWorksheet(performance_SWAB, 'PTNG_GX_SWAB')
addWorksheet(performance_SWAB, 'TV_PT_SWAB_2x2')
addWorksheet(performance_SWAB, 'PTCT_GX_SWAB_2x2')
addWorksheet(performance_SWAB, 'PTNG_GX_SWAB_2x2')
writeData(performance_SWAB, sheet=1, TV_PT_SWAB)
writeData(performance_SWAB, sheet=2, PTCT_GX_SWAB)
writeData(performance_SWAB, sheet=3, PTNG_GX_SWAB)
writeData(performance_SWAB, sheet=4, tab5_TV_SWAB)
writeData(performance_SWAB, sheet=5, tab5_CL_SWAB)
writeData(performance_SWAB, sheet=6, tab5_NG_SWAB)
saveWorkbook(performance_SWAB, file =paste(path, "performance_SWAB.xlsx",sep='/'), overwrite = TRUE)
table(teste_final_df$x63_sifilis_cfff)
table(teste_final_df$sifilis_rpr_qualitativo)
#1. Calcular a sensibilidade, especificidade, VPN e VPP de Sífilis TDR quando comparado com Sifilis_RPR_Qualitativo
teste_final_df$sifilis_rpr_qualitativo[teste_final_df$sifilis_rpr_qualitativo=='3_NAO_REALIZADO']<-NA
teste_final_df$sifilis_rpr_qualitativo[teste_final_df$sifilis_rpr_qualitativo=='1_Positivo']<-'1_POSITIVO'
SIFILIS_TDR_RPR<-sens_spec(var=c('x63_sifilis_cfff'),y='sifilis_rpr_qualitativo', data=teste_sawb_TV_df, digit.est = 3)
tab5_TDR_RPR<-with(teste_final_df, addmargins(table(x63_sifilis_cfff,sifilis_rpr_qualitativo), margin=c(1,2)))
SIFILIS_TDR_RPR<-sens_spec(var=c('x63_sifilis_cfff'),y='sifilis_rpr_qualitativo', data=teste_final_df, digit.est = 3)
tab5_TDR_RPR<-with(teste_final_df, addmargins(table(x63_sifilis_cfff,sifilis_rpr_qualitativo), margin=c(1,2)))
table(teste_final_df$sifilis_rpr_quantitativo)
table(teste_final_df$sifilis_tppa)
teste_final_df$sifilis_tppa[teste_final_df$sifilis_tppa=='3_NAO_APLICAVEL']<-NA
teste_final_df$sifilis_tppa[teste_final_df$sifilis_tppa=='1_Positivo']<-'1_POSITIVO'
SIFILIS_TDR_TPPA<-sens_spec(var=c('x63_sifilis_cfff'),y='sifilis_tppa', data=teste_final_df, digit.est = 3)
tab5_TDR_TPPA<-with(teste_final_df, addmargins(table(x63_sifilis_cfff,sifilis_tppa), margin=c(1,2)))
tab5_TDR_TPPA
### SENSIBILIDADE SWAB
performance_SIFILIS<-createWorkbook(paste(path, 'PERFORMANCE_SIFILIS.xlsx',sep='/'))
### SENSIBILIDADE SWAB
performance_SIFILIS<-createWorkbook(paste(path, 'PERFORMANCE_SIFILIS.xlsx',sep='/'))
addWorksheet(performance_SIFILIS, 'SIFILIS_TDR_RPR')
addWorksheet(performance_SIFILIS, 'SIFILIS_TDR_RPR_2x2')
addWorksheet(performance_SIFILIS, 'SIFILIS_TDR_TPPA_2x2')
#addWorksheet(performance_SIFILIS, 'TV_PT_SWAB_2x2')
#addWorksheet(performance_SIFILIS, 'PTCT_GX_SWAB_2x2')
#addWorksheet(performance_SIFILIS, 'PTNG_GX_SWAB_2x2')
writeData(performance_SIFILIS, sheet=1, SIFILIS_TDR_RPR)
writeData(performance_SIFILIS, sheet=2, tab5_TDR_TPPA)
writeData(performance_SIFILIS, sheet=3, tab5_TDR_TPPA)
#writeData(performance_SIFILIS, sheet=4, tab5_TV_SWAB)
#writeData(performance_SIFILIS, sheet=5, tab5_CL_SWAB)
#writeData(performance_SIFILIS, sheet=6, tab5_NG_SWAB)
saveWorkbook(performance_SIFILIS, file =paste(path, "performance_SIFILIS.xlsx",sep='/'), overwrite = TRUE)
blogdown:::new_post_addin()
blogdown::serve_site(.site_dir ='C:/Users/Rachid/Dropbox/website' )
blogdown::serve_site(.site_dir ='C:/Users/Rachid/Dropbox/website' )
setwd('C:/Users/Rachid/Dropbox/website')
rstudioapi::navigateToFile("C:/Users/Rachid/Dropbox/website/config/_default/config.yaml")
blogdown::serve_site(.site_dir ='C:/Users/Rachid/Dropbox/website' )
setwd('C:/Users/Rachid/Dropbox/website')
blogdown::check_content()
blogdown::check_content()
